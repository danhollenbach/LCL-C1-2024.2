// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "12/10/2024 08:51:16"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Exp51 (
	SUM,
	A,
	B,
	CARRY,
	COUT);
output 	SUM;
input 	A;
input 	B;
input 	CARRY;
output 	COUT;

// Design Ports Information
// SUM	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// COUT	=>  Location: PIN_L11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CARRY	=>  Location: PIN_N10,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \SUM~output_o ;
wire \COUT~output_o ;
wire \A~input_o ;
wire \CARRY~input_o ;
wire \B~input_o ;
wire \inst3|Mux0~0_combout ;
wire \inst|Mux0~0_combout ;


// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \SUM~output (
	.i(\inst3|Mux0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SUM~output_o ),
	.obar());
// synopsys translate_off
defparam \SUM~output .bus_hold = "false";
defparam \SUM~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X31_Y0_N2
cycloneiv_io_obuf \COUT~output (
	.i(\inst|Mux0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\COUT~output_o ),
	.obar());
// synopsys translate_off
defparam \COUT~output .bus_hold = "false";
defparam \COUT~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N1
cycloneiv_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N8
cycloneiv_io_ibuf \CARRY~input (
	.i(CARRY),
	.ibar(gnd),
	.o(\CARRY~input_o ));
// synopsys translate_off
defparam \CARRY~input .bus_hold = "false";
defparam \CARRY~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N8
cycloneiv_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N24
cycloneiv_lcell_comb \inst3|Mux0~0 (
// Equation(s):
// \inst3|Mux0~0_combout  = \A~input_o  $ (\CARRY~input_o  $ (\B~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\CARRY~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\inst3|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|Mux0~0 .lut_mask = 16'hA55A;
defparam \inst3|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N2
cycloneiv_lcell_comb \inst|Mux0~0 (
// Equation(s):
// \inst|Mux0~0_combout  = (\A~input_o  & ((\CARRY~input_o ) # (\B~input_o ))) # (!\A~input_o  & (\CARRY~input_o  & \B~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\CARRY~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\inst|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|Mux0~0 .lut_mask = 16'hFAA0;
defparam \inst|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign SUM = \SUM~output_o ;

assign COUT = \COUT~output_o ;

endmodule
